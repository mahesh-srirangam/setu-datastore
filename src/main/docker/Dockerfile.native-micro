#####
## This Dockerfile is used in order to build a container that runs the Quarkus application in native (no JVM) mode.
## It uses a micro base image, tuned for Quarkus native executables.
## It reduces the size of the resulting container image.
## Check https://quarkus.io/guides/quarkus-runtime-base-image for further information about this image.
##
## Before building the container image run:
##
## ./mvnw package -Pnative
##
## Then, build the image with:
##
## docker build -f src/main/docker/Dockerfile.native-micro -t quarkus/setu .
##
## Then run the container using:
##
## docker run -i --rm -p 8080:8080 quarkus/setu
##
####
#FROM quay.io/quarkus/quarkus-micro-image:1.0
#WORKDIR /work/
#RUN gu install js
#RUN chown 1001 /work \
#    && chmod "g+rwX" /work \
#    && chown 1001:root /work
#COPY --chown=1001:root target/*-runner /work/application
#EXPOSE 8080
#USER 1001
#
#CMD ["./application", "-Dquarkus.http.host=0.0.0.0 -Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager -DCONFIG_ACCESS_TOKEN=0af950ae-c34b-459b-bc8b-44ef46566dcb -DCONFIG_LABEL=master -DCONFIG_NAME=redis,postgres,kafka,rabbitmq,s3,app-master,jaeger -DCONFIG_URI=https://api-dev.stagingfareyeconnect.com/config -DDB_NAME=setu_v2"]

## Stage 1 : build with maven builder image with native capabilities
#FROM quay.io/quarkus/ubi-quarkus-graalvmce-builder-image:22.3-java17 AS build
#COPY --chown=quarkus:quarkus mvnw /code/mvnw
#COPY --chown=quarkus:quarkus .mvn /code/.mvn
#COPY --chown=quarkus:quarkus pom.xml /code/
#USER quarkus
#WORKDIR /code
#RUN ./mvnw -B org.apache.maven.plugins:maven-dependency-plugin:3.1.2:go-offline
#COPY src /code/src
#RUN ./mvnw package -Pnative

### Stage 2 : create the docker final image
#FROM quay.io/quarkus/ubi-quarkus-graalvmce-builder-image:22.3-java17 AS build
#COPY --chown=quarkus:quarkus mvnw /code/mvnw
#COPY --chown=quarkus:quarkus .mvn /code/.mvn
#COPY --chown=quarkus:quarkus pom.xml /code/
#USER quarkus
#WORKDIR /code
#RUN ./mvnw -B org.apache.maven.plugins:maven-dependency-plugin:3.1.2:go-offline
#COPY src /code/src
#RUN ./mvnw package -Pnative -Dquarkus.profile=dev
#-Dquarkus.native.additional-build-args="--language:js"

FROM quay.io/quarkus/quarkus-micro-image:2.0
WORKDIR /work/
RUN chown 1001 /work \
    && chmod "g+rwX" /work \
    && chown 1001:root /work
COPY --chown=1001:root target/*-runner /work/application

EXPOSE 8080
USER 1001
CMD ["./application", "-Djava.util.logging.manager=org.jboss.logmanager.LogManager"]
#CMD ["./application", "-Dquarkus.http.host=0.0.0.0"]