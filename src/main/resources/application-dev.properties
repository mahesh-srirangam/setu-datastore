#
# /*
#  * *
#  *  * ****************************************************************************
#  *  *
#  *  * Copyright (c) 2023, FarEye and/or its affiliates. All rights
#  *  * reserved.
#  *  * ___________________________________________________________________________________
#  *  *
#  *  *
#  *  * NOTICE: All information contained herein is, and remains the property of
#  *  * FaEye and its suppliers,if any. The intellectual and technical concepts
#  *  * contained herein are proprietary to FarEye. and its suppliers and
#  *  * may be covered by us and Foreign Patents, patents in process, and are
#  *  * protected by trade secret or copyright law. Dissemination of this information
#  *  * or reproduction of this material is strictly forbidden unless prior written
#  *  * permission is obtained from FarEye
#  *
#  */
#
run.flyway.migrate-at-start=true
quarkus.application.name=redis,postgres,kafka,rabbitmq,s3,app-master,jaeger,setu
quarkus.spring-cloud-config.enabled=true
# configure the URL where the Config Server listens to HTTP requests - this could have been left out since http://localhost:8888 is the default
quarkus.spring-cloud-config.url=https://api-dev.stagingfareyeconnect.com/config
quarkus.spring-cloud-config.label=master
quarkus.spring-cloud-config.headers.Authorization=Bearer 0af950ae-c34b-459b-bc8b-44ef46566dcb
server.port=8081
logging.level.root=INFO
#Defaults to 60 is set to 0 for dev env only for those who don't have kafka locally
app.kafka.max-block.seconds=1
#spring.jpa.hibernate.ddl-auto = update
quarkus.hibernate-orm.log.sql=true
app.dbName=setuv2
#app.schemaName=fareye_schema
app.scriptEngineLanguage=JS
management.endpoints.web.exposure.include=*
quarkus.redis.hosts=redis://localhost:6379
#Properties releated to Security Config that can be changed as per your needs
fareye.auth.default.user=fareye_admin
fareye.auth.default.password={noop}fareye@!@#$%
fareye.auth.default.authority=VARIABLE_READ,VARIABLE_CREATE,VARIABLE_UPDATE,VARIABLE_DELETE
logging.level.org.apache.kafka=OFF
quarkus.flyway.out-of-order=true
kafka.bootstrap.servers=localhost:9092
# Configuring the outgoing channel (writing to Kafka)
mp.messaging.outgoing.traffic-log.connector=smallrye-kafka
mp.messaging.outgoing.traffic-log.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.traffic-log.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
mp.messaging.outgoing.email.connector=smallrye-kafka
mp.messaging.outgoing.email.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.email.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
# Configuring the incoming channel (reading from Kafka)
mp.messaging.incoming.accounts-in.connector=smallrye-kafka
mp.messaging.incoming.accounts-in.partitions=1
mp.messaging.incoming.accounts-in.group.id=1
mp.messaging.incoming.accounts-in.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
# mp.messaging.incoming.accounts-in.value.deserializer=com.ardab.quarkus.consumer.model.AccountDeserializer
mp.messaging.incoming.accounts-in.auto.offset.reset=earliest
traffic.log.topic=test
encrypt.key=e1903e0a-5aa6-42ae-8137-3ebd48ba21ac
email.topic=test